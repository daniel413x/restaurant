{"version":3,"file":"static/js/605.b2359af0.chunk.js","mappings":"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","sources":["components/SmartInput.tsx","http/orderAPI.ts","components/modals/RemoveFromCart.tsx","../node_modules/react-bootstrap/esm/Spinner.js","components/modals/Checkout.tsx","pages/Cart.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\nimport {\n  Col, Form,\n} from 'react-bootstrap';\n\ninterface SmartInputProps {\n  primaryStyle?: boolean;\n  label?: string;\n  onFileChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onChange?: (e: string) => void;\n  value?: string;\n  placeholder?: string;\n  pressedSubmit?: boolean;\n  setPressedSubmit?: (param: boolean) => void;\n  optional?: boolean;\n  bsWidth?: number | boolean;\n  type?: string;\n  classes?: string;\n  id?: string;\n  tabIndex?: number | undefined;\n}\n\nfunction SmartInput({\n  label,\n  onChange,\n  onFileChange,\n  value,\n  placeholder,\n  pressedSubmit,\n  setPressedSubmit,\n  optional,\n  bsWidth,\n  primaryStyle,\n  type,\n  classes,\n  id,\n  tabIndex,\n}: SmartInputProps) {\n  const [warn, setWarn] = useState<boolean>(false);\n  useEffect(() => {\n    if (pressedSubmit && !optional && !value) {\n      setWarn(true);\n    }\n  }, [pressedSubmit]);\n  useEffect(() => {\n    if (setPressedSubmit) {\n      setWarn(false);\n      setPressedSubmit(false);\n    }\n  }, [value]);\n  return (\n    <Col className={`smart-input ${classes}`} md={bsWidth}>\n      {label && (\n      <span className=\"label\">\n        {label}\n      </span>\n      )}\n      {type === 'file' ? (\n        <Form.Control\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          onChange={onFileChange}\n          className={`${warn && 'warn'} ${primaryStyle && 'primary-style'}`}\n          tabIndex={tabIndex}\n          onClick={() => {\n            if (setPressedSubmit) {\n              setWarn(false);\n              setPressedSubmit(false);\n            }\n          }}\n        />\n      ) : (\n        <Form.Control\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          value={value}\n          tabIndex={tabIndex}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => onChange!(e.target.value)}\n          className={`${warn && 'warn'} ${primaryStyle && 'primary-style'}`}\n        />\n      )}\n    </Col>\n  );\n}\n\nSmartInput.defaultProps = {\n  placeholder: '',\n  optional: false,\n  bsWidth: false,\n  primaryStyle: false,\n  value: '',\n  onChange: false,\n  onFileChange: false,\n  pressedSubmit: false,\n  setPressedSubmit: false,\n  label: '',\n  type: 'text',\n  classes: '',\n  id: '',\n  tabIndex: undefined,\n};\n\nexport default SmartInput;\n","import {\n  IOrder,\n  QueryReqSubmitOrder,\n} from '../types/types';\nimport { $authHost } from './index';\n\nexport const fetchUserOrders = async (): Promise<IOrder[]> => {\n  const { data } = await $authHost.get('api/order');\n  return data.rows;\n};\n\nexport const fetchAllOrders = async (): Promise<IOrder[]> => {\n  const { data } = await $authHost.get('api/order/all');\n  return data.rows;\n};\n\nexport const fetchActiveOrder = async (): Promise<IOrder> => {\n  const { data } = await $authHost.get('api/order/activeorder');\n  return data;\n};\n\nexport const submitOrder = async (obj: QueryReqSubmitOrder) => {\n  const { data } = await $authHost.post('api/order', obj);\n  return data;\n};\n\nexport const updateOrderStatus = async (id: string, status: number) => {\n  const { data } = await $authHost.put(`api/order/changestatus/${id}`, { status });\n  return data;\n};\n","import React, {\n  useContext,\n  FormEvent,\n} from 'react';\nimport {\n  Modal, Button, Form,\n} from 'react-bootstrap';\nimport { IModalProps, OrderOrCartFoodItem } from '../../types/types';\nimport {\n  shortNotification,\n  green,\n  red,\n} from '../../utils/consts';\nimport Context from '../../context/context';\nimport { removeFoodItem } from '../../http/foodItemInCartAPI';\n\ninterface RemoveFromCartProps extends IModalProps {\n  itemName: string | undefined;\n  itemId: string | undefined;\n}\n\nfunction RemoveFromCart({\n  onHide,\n  show,\n  itemName,\n  itemId,\n}: RemoveFromCartProps) {\n  const { notifications, cart, user } = useContext(Context);\n  const action = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      if (user.isGuest) {\n        const guestCartItems = JSON.parse(localStorage.getItem('guestCartItems')!).filter((item: OrderOrCartFoodItem) => item.id !== itemId);\n        localStorage.setItem('guestCartItems', JSON.stringify(guestCartItems));\n      } else {\n        await removeFoodItem(itemId!);\n      }\n      cart.changeItemQuantity(itemId!, 0);\n      notifications.message(\n        'Item removed from cart',\n        green,\n        shortNotification,\n      );\n      onHide();\n    } catch (error: any) {\n      notifications.message(\n        error.response.data.message,\n        red,\n        shortNotification,\n      );\n    }\n  };\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      centered\n      className=\"remove-item\"\n    >\n      <Form onSubmit={action}>\n        <Modal.Body>\n          <h2>\n            Remove from cart?\n          </h2>\n          {itemName}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button id=\"submit-button\" type=\"submit\">\n            Confirm\n          </Button>\n          <Button id=\"cancel-button\" onClick={onHide}>Back</Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default RemoveFromCart;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, {\n  useContext,\n  useState,\n  useEffect,\n  FormEvent,\n} from 'react';\nimport {\n  Modal,\n  Button,\n  Row,\n  Col,\n  Form,\n  Spinner,\n  Dropdown,\n} from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite';\nimport { useNavigate } from 'react-router-dom';\nimport Context from '../../context/context';\nimport SmartInput from '../SmartInput';\nimport {\n  IAddress,\n  OrderOrCartFoodItem,\n} from '../../types/types';\nimport {\n  shortNotification,\n  red,\n  ACCOUNT_ROUTE,\n  GUEST_ROUTE,\n  ORDERS_ROUTE,\n} from '../../utils/consts';\nimport { submitOrder } from '../../http/orderAPI';\nimport { calcItemPrice } from '../../utils/functions';\n\ninterface CheckoutProps {\n  onHide: () => void;\n  show: boolean;\n  checkoutItems: OrderOrCartFoodItem[];\n}\n\nfunction Checkout({\n  onHide,\n  show,\n  checkoutItems,\n}: CheckoutProps) {\n  const {\n    notifications,\n    cart,\n    user,\n    addresses,\n  } = useContext(Context);\n  const [email, setEmail] = useState<string>('');\n  const [firstName, setFirstName] = useState<string>('');\n  const [lastName, setLastName] = useState<string>('');\n  const [addressLineOne, setAddressLineOne] = useState<string>('');\n  const [addressLineTwo, setAddressLineTwo] = useState<string | undefined>('');\n  const [city, setCity] = useState<string>('');\n  const [zip, setZip] = useState<string>('');\n  const [state, setState] = useState<string>('');\n  const [cardName, setCardName] = useState<string>('');\n  const [cardNumber, setCardNumber] = useState<string>('');\n  const [cardExpiration, setCardExpiration] = useState<string>('');\n  const [cardCVC, setCardCVC] = useState<string>('');\n  const [pressedSubmit, setPressedSubmit] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate = useNavigate();\n  // const UserId = user.id;\n  const requiredFieldsIncomplete = !email || !firstName || !lastName\n  || !addressLineOne || !city || !zip\n  || !state || !cardName\n  || !cardNumber || !cardExpiration || !cardCVC;\n  const action = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setPressedSubmit(true);\n    if (requiredFieldsIncomplete) {\n      return notifications.message(\n        'Please complete all required fields',\n        red,\n        shortNotification,\n      );\n    }\n    const noItems = cart.foodItems.length === 0;\n    if (noItems) {\n      return notifications.message(\n        'No items in cart',\n        red,\n        shortNotification,\n      );\n    }\n    setLoading(true);\n    try {\n      const address = {\n        firstName,\n        lastName,\n        addressLineOne,\n        addressLineTwo,\n        city,\n        zip,\n        state,\n      };\n      const CartId = cart.id;\n      const UserId = user.id;\n      await submitOrder({\n        UserId,\n        CartId,\n        address,\n      });\n      // orders.addOrder(order);\n      cart.clearItems();\n      return navigate(\n        user.isGuest ? `/${GUEST_ROUTE}/${ORDERS_ROUTE}`\n          : `${ACCOUNT_ROUTE}`,\n      );\n    } catch (error: any) {\n      return notifications.message(\n        error.response.data.message,\n        red,\n        shortNotification,\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n  const selectFromSavedAddresses = (obj: IAddress) => {\n    setFirstName(obj.firstName);\n    setLastName(obj.lastName);\n    setAddressLineOne(obj.addressLineOne);\n    setAddressLineTwo(obj.addressLineTwo);\n    setCity(obj.city);\n    setZip(obj.zip);\n    setState(obj.state);\n  };\n  useEffect(() => {\n    if (user.isRegistered) {\n      setEmail(user.email);\n    }\n  }, [user.email]);\n  useEffect(() => {\n    if (addresses.defaultAddress) {\n      selectFromSavedAddresses(addresses.defaultAddress!);\n    }\n  }, [addresses.defaultAddress]);\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n      className=\"shipping-form p-0\"\n      id=\"checkout\"\n    >\n      {loading && <Spinner animation=\"grow\" className=\"loading-anim\" />}\n      <div className={`${loading && 'blocked'} checkout`}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Checkout\n            {' '}\n          </Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={action}>\n          <Modal.Body>\n            <div className=\"receipt\">\n              <h5>\n                Receipt\n              </h5>\n              {checkoutItems.map((item) => (\n                <Row\n                  className=\"item-price-pair\"\n                  key={item.id}\n                >\n                  <Col className=\"item\">\n                    {' '}\n                    {item.name}\n                    {' '}\n                    {item.quantity > 1 && `(${item.quantity}) `}\n                  </Col>\n                  <Col className=\"price\">\n                    $\n                    {calcItemPrice(item.price, item.discount)}\n                  </Col>\n                </Row>\n              ))}\n              —\n              <Row className=\"item-price-pair\">\n                <Col>\n                  Total\n                </Col>\n                <Col>\n                  <strong>\n                    $\n                    {cart.total}\n                  </strong>\n                </Col>\n              </Row>\n            </div>\n            <hr />\n            <h5>\n              Shipping &amp; billing\n            </h5>\n            * = required field\n            {addresses.all.length > 0 && (\n            <Dropdown>\n              <Dropdown.Toggle>\n                Saved addresses\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {addresses.all.map((addressObj) => (\n                  <Dropdown.Item\n                    onClick={() => selectFromSavedAddresses(addressObj)}\n                    key={addressObj.id}\n                  >\n                    {addressObj.addressLineOne}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            )}\n            <SmartInput\n              id=\"email-field\"\n              label=\"Email*\"\n              value={email}\n              onChange={setEmail}\n              pressedSubmit={pressedSubmit}\n              setPressedSubmit={setPressedSubmit}\n              primaryStyle\n            />\n            <div className=\"name-row\">\n              <SmartInput\n                id=\"first-name-field\"\n                label=\"First name*\"\n                value={firstName}\n                onChange={setFirstName}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                primaryStyle\n              />\n              <SmartInput\n                primaryStyle\n                id=\"last-name-field\"\n                label=\"Last name*\"\n                value={lastName}\n                onChange={setLastName}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n              />\n            </div>\n            <SmartInput\n              primaryStyle\n              id=\"address-line-one-field\"\n              label=\"Street address*\"\n              value={addressLineOne}\n              onChange={setAddressLineOne}\n              pressedSubmit={pressedSubmit}\n              setPressedSubmit={setPressedSubmit}\n            />\n            <SmartInput\n              label=\"Street address Line Two\"\n              id=\"address-line-two-field\"\n              value={addressLineTwo}\n              onChange={setAddressLineTwo}\n              pressedSubmit={pressedSubmit}\n              setPressedSubmit={setPressedSubmit}\n              optional\n              placeholder=\"apt., suite\"\n              primaryStyle\n            />\n            <div className=\"city-row\">\n              <SmartInput\n                label=\"Territory/City*\"\n                id=\"city-field\"\n                value={city}\n                onChange={setCity}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                bsWidth={6}\n                primaryStyle\n              />\n              <SmartInput\n                label=\"State*\"\n                id=\"state-field\"\n                value={state}\n                onChange={setState}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                primaryStyle\n              />\n              <SmartInput\n                label=\"Zip address*\"\n                id=\"zip-field\"\n                value={zip}\n                onChange={setZip}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                primaryStyle\n              />\n            </div>\n            <hr />\n            <h5>\n              Payment\n            </h5>\n            <SmartInput\n              label=\"Full name on card*\"\n              id=\"card-name-field\"\n              value={cardName}\n              onChange={setCardName}\n              pressedSubmit={pressedSubmit}\n              setPressedSubmit={setPressedSubmit}\n              primaryStyle\n            />\n            <div className=\"card-number-row\">\n              <SmartInput\n                label=\"Card number*\"\n                id=\"card-number-field\"\n                value={cardNumber}\n                onChange={setCardNumber}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                bsWidth={6}\n                primaryStyle\n              />\n              <SmartInput\n                label=\"Expir.*\"\n                id=\"card-expiration-field\"\n                value={cardExpiration}\n                onChange={setCardExpiration}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                primaryStyle\n              />\n              <SmartInput\n                label=\"CVC*\"\n                id=\"card-cvc-field\"\n                value={cardCVC}\n                onChange={setCardCVC}\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                primaryStyle\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button className={`${requiredFieldsIncomplete && 'blocked'}`} type=\"submit\" id=\"submit-button\">Submit</Button>\n          </Modal.Footer>\n        </Form>\n      </div>\n    </Modal>\n  );\n}\n\nexport default observer(Checkout);\n","import React, { useState, useContext } from 'react';\nimport {\n  Container, Col, Button,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBasketShopping,\n} from '@fortawesome/free-solid-svg-icons';\nimport { observer } from 'mobx-react-lite';\nimport { OrderOrCartFoodItem } from '../types/types';\nimport List from '../components/List';\nimport FoodItemAuxiliary from '../components/FoodItemAuxiliary';\nimport { countItems } from '../utils/functions';\nimport RemoveFromCart from '../components/modals/RemoveFromCart';\nimport Checkout from '../components/modals/Checkout';\nimport Context from '../context/context';\nimport { changeQuantity } from '../http/foodItemInCartAPI';\nimport { GUEST } from '../utils/consts';\n\nfunction Cart() {\n  const { cart } = useContext(Context);\n  const cartCount = countItems(cart.foodItems);\n  const thereAreItems = cartCount > 0;\n  const [showDeleteModal, setShowDeleteModal] = useState<boolean>(false);\n  const [showCheckoutModal, setShowCheckoutModal] = useState<boolean>(false);\n  const [deletedItem, setDeletedItem] = useState<OrderOrCartFoodItem | null>(null);\n  const handleDeleteModal = (item: OrderOrCartFoodItem) => {\n    setDeletedItem(item);\n    setShowDeleteModal(true);\n  };\n  const changeCartItemQuantity = async (itemId: string, quantity: number, increment?: boolean) => {\n    const newQuantity = increment ? quantity + 1 : quantity - 1;\n    if (cart.id === GUEST) {\n      const guestCartItems = JSON.parse(localStorage.getItem('guestCartItems')!);\n      localStorage.setItem('guestCartItems', JSON.stringify(guestCartItems.map((item: OrderOrCartFoodItem) => {\n        if (item.id === itemId) {\n          return { ...item, quantity: newQuantity };\n        }\n        return item;\n      })));\n    } else {\n      await changeQuantity(itemId, newQuantity);\n    }\n    cart.changeItemQuantity(itemId, newQuantity);\n  };\n  return (\n    <Container id=\"cart\">\n      <RemoveFromCart\n        show={showDeleteModal}\n        onHide={() => setShowDeleteModal(false)}\n        itemName={deletedItem?.name}\n        itemId={deletedItem?.id}\n      />\n      <Checkout\n        show={showCheckoutModal}\n        onHide={() => setShowCheckoutModal(false)}\n        checkoutItems={cart.foodItems}\n      />\n      <Col>\n        <h2>\n          Cart\n          {' '}\n          <FontAwesomeIcon icon={faBasketShopping} />\n        </h2>\n        <Col className=\"items\" md={3}>\n          {cartCount ? `${cartCount} item${cartCount > 1 ? 's' : ''} in your cart:` : 'No items in your cart'}\n        </Col>\n        <List\n          items={cart.foodItems}\n          renderList={(foodItem: OrderOrCartFoodItem) => (\n            <li\n              key={foodItem.id}\n            >\n              <FoodItemAuxiliary\n                foodItem={foodItem}\n                handleDeleteModal={() => handleDeleteModal(foodItem)}\n                quantity={foodItem.quantity!}\n                increment={() => changeCartItemQuantity(foodItem.id!, foodItem.quantity, true)}\n                decrement={() => changeCartItemQuantity(foodItem.id!, foodItem.quantity)}\n              />\n            </li>\n          )}\n        />\n        {thereAreItems && (\n          <div className=\"checkout-total\">\n            <Col className=\"divider\" />\n            <Col md=\"auto\" className=\"total\">\n              <div className=\"label\">\n                Total\n              </div>\n              <div className=\"figure\">\n                $\n                {cart.total}\n              </div>\n            </Col>\n            <Col md=\"auto\">\n              <Button\n                id=\"checkout-button\"\n                onClick={() => setShowCheckoutModal(true)}\n              >\n                Checkout\n              </Button>\n            </Col>\n          </div>\n        )}\n      </Col>\n    </Container>\n  );\n}\n\nexport default observer(Cart);\n"],"names":["SmartInput","label","onChange","onFileChange","value","placeholder","pressedSubmit","setPressedSubmit","optional","bsWidth","primaryStyle","type","classes","id","tabIndex","useState","warn","setWarn","useEffect","className","md","onClick","e","target","defaultProps","undefined","fetchUserOrders","$authHost","data","rows","fetchAllOrders","fetchActiveOrder","submitOrder","obj","updateOrderStatus","status","onHide","show","itemName","itemId","useContext","Context","notifications","cart","user","action","preventDefault","isGuest","guestCartItems","JSON","parse","localStorage","getItem","filter","item","setItem","stringify","removeFoodItem","changeItemQuantity","message","green","shortNotification","response","red","Modal","size","centered","Form","onSubmit","Button","Spinner","React","ref","bsPrefix","variant","animation","as","Component","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","observer","checkoutItems","addresses","email","setEmail","firstName","setFirstName","lastName","setLastName","addressLineOne","setAddressLineOne","addressLineTwo","setAddressLineTwo","city","setCity","zip","setZip","state","setState","cardName","setCardName","cardNumber","setCardNumber","cardExpiration","setCardExpiration","cardCVC","setCardCVC","loading","setLoading","navigate","useNavigate","requiredFieldsIncomplete","foodItems","length","address","CartId","UserId","clearItems","GUEST_ROUTE","ORDERS_ROUTE","ACCOUNT_ROUTE","selectFromSavedAddresses","isRegistered","defaultAddress","closeButton","map","Row","Col","name","quantity","calcItemPrice","price","discount","total","all","Dropdown","addressObj","cartCount","countItems","thereAreItems","showDeleteModal","setShowDeleteModal","showCheckoutModal","setShowCheckoutModal","deletedItem","setDeletedItem","changeCartItemQuantity","increment","newQuantity","GUEST","changeQuantity","Container","icon","faBasketShopping","List","items","renderList","foodItem","FoodItemAuxiliary","handleDeleteModal","decrement"],"sourceRoot":""}