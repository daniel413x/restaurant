{"version":3,"file":"static/js/935.79cf969b.chunk.js","mappings":"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","sources":["components/EditedIngredient.tsx","components/FoodItemForm.tsx","components/List.tsx","components/SmartInput.tsx","components/UploadImage.tsx","components/modals/Confirmation.tsx","http/foodItemInMenuAPI.ts"],"sourcesContent":["import React from 'react';\nimport {\n  Col,\n  Row,\n  Button,\n} from 'react-bootstrap';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ninterface EditedIngredientProps {\n  ingredient: string;\n  deleteIngredient: (name: string) => void;\n}\n\nfunction EditedIngredient({\n  ingredient,\n  deleteIngredient,\n}: EditedIngredientProps) {\n  return (\n    <Row className=\"edited-ingredient\" id={`ingredient-${ingredient}`}>\n      <Col className=\"name\" md=\"auto\">\n        {ingredient}\n      </Col>\n      <Col className=\"spacer\" />\n      <Col className=\"icon-buttons\" md=\"auto\">\n        <Button\n          id={`delete-ingredient-${ingredient}`}\n          className=\"btn btn-secondary\"\n          onClick={() => deleteIngredient(ingredient)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n\nexport default EditedIngredient;\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n  ChangeEvent,\n  FormEvent,\n} from 'react';\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  Dropdown,\n} from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite';\nimport Context from '../context/context';\nimport {\n  ICategory,\n  IFoodItem,\n} from '../types/types';\nimport {\n  green,\n  red,\n  shortNotification,\n} from '../utils/consts';\nimport Confirmation from './modals/Confirmation';\nimport UploadImage from './UploadImage';\nimport { calcItemPrice } from '../utils/functions';\nimport List from './List';\nimport EditedIngredient from './EditedIngredient';\nimport SmartInput from './SmartInput';\nimport { createFoodItem, editFoodItem, fetchOneFoodItem } from '../http/foodItemInMenuAPI';\n\ninterface FoodItemFormProps {\n  foodItem?: IFoodItem,\n  creatingForCategoryId?: string;\n  closeModalOnSubmit?: () => void;\n}\n\nfunction FoodItemForm({\n  foodItem,\n  creatingForCategoryId,\n  closeModalOnSubmit,\n}: FoodItemFormProps) {\n  const { categories, notifications } = useContext(Context);\n  const [showDeleteModal, setShowDeleteModal] = useState<boolean>(false);\n  const [category, setCategory] = useState<Omit<ICategory, 'foodItems' | 'public'>>();\n  const [name, setName] = useState<string>(foodItem?.name || '');\n  const [discount, setDiscount] = useState<number>(Number(foodItem?.discount) || 0);\n  const [price, setPrice] = useState<number>(Number(foodItem?.price) || 3);\n  const previousPrice = foodItem?.price || 0;\n  const userChangedPrice = !foodItem ? null : Number(calcItemPrice(price, discount)) !== Number(calcItemPrice(previousPrice, foodItem?.discount));\n  const showPreviousPrice = userChangedPrice && foodItem;\n  // const difference = Number(calcItemPrice(price, discount)) - Number(calcItemPrice(previousPrice, discount));\n  const [image, setImage] = useState<File | string>(foodItem?.image || '');\n  const [ingredients, setIngredients] = useState<string[]>(foodItem?.ingredients || []);\n  const [newIngredients, setNewIngredients] = useState<string>('');\n  const [serves, setServes] = useState<number>(foodItem?.serves || 1);\n  const [time, setTime] = useState<[number, number]>(foodItem?.time || [10, 15]);\n  const [pressedSubmit, setPressedSubmit] = useState<boolean>(false);\n  const submitDelete = () => {\n    notifications.message(\n      'Category deleted',\n      red,\n      shortNotification,\n    );\n  };\n  const addIngredient = () => {\n    const newIngredientsArr = newIngredients.split(/,\\s+|\\s+,|,/).filter(Boolean);\n    newIngredientsArr.forEach((c) => c.split('').filter(Boolean).join(''));\n    for (let newIngredient = 0; newIngredient < newIngredientsArr.length; newIngredient += 1) {\n      for (let previousIngredient = 0; previousIngredient < ingredients.length; previousIngredient += 1) {\n        if (ingredients[previousIngredient] === newIngredientsArr[newIngredient]) {\n          return notifications.message(\n            'Ingredient already exists; check input',\n            red,\n            shortNotification,\n          );\n        }\n      }\n    }\n    setNewIngredients('');\n    return setIngredients([...ingredients, ...newIngredientsArr.filter((c) => !/[^\\S]+\\s+[^\\S]+/.test(c))]);\n  };\n  // const showPercent = (number: number) => number * 100;\n  const deleteIngredient = (ingredient: string) => setIngredients(ingredients?.filter((ingredientName) => ingredient !== ingredientName));\n  const submit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setPressedSubmit(true);\n    if (!name || !image) {\n      notifications.message(\n        'Please complete highlighted fields',\n        red,\n        shortNotification,\n      );\n      return;\n    }\n    const foodItemForm = new FormData();\n    foodItemForm.append('name', name);\n    foodItemForm.append('CategoryId', category!.id);\n    foodItemForm.append('discount', JSON.stringify(discount));\n    foodItemForm.append('price', JSON.stringify(price));\n    foodItemForm.append('imgImage', image);\n    foodItemForm.append('ingredients', JSON.stringify(ingredients));\n    foodItemForm.append('serves', JSON.stringify(serves));\n    foodItemForm.append('time', JSON.stringify(time));\n    try {\n      if (foodItem) {\n        // PUT\n        await editFoodItem(foodItem.id, foodItemForm);\n        const updatedFoodItem = await fetchOneFoodItem(foodItem.id);\n        const previousCategoryId = foodItem.CategoryId;\n        if (category!.id !== previousCategoryId) {\n          categories.updateFoodItem(updatedFoodItem, previousCategoryId);\n        } else {\n          categories.updateFoodItem(updatedFoodItem);\n        }\n        notifications.message(\n          'Food item updated successfully',\n          green,\n          shortNotification,\n        );\n      } else {\n        // POST\n        const newFoodItem = await createFoodItem(foodItemForm);\n        categories.addFoodItem(newFoodItem);\n        notifications.message(\n          'Food item created successfully',\n          green,\n          shortNotification,\n        );\n      }\n      if (closeModalOnSubmit) {\n        closeModalOnSubmit();\n      }\n    } catch (error: any) {\n      notifications.message(\n        error.response.data.message,\n        red,\n        shortNotification,\n      );\n    }\n  };\n  useEffect(() => {\n    const presetCategory = categories.all.find((cat) => {\n      if (foodItem) {\n        return cat.id === foodItem.CategoryId;\n      }\n      if (creatingForCategoryId) {\n        return cat.id === creatingForCategoryId;\n      }\n      return cat.name === 'Uncategorized';\n    });\n    setCategory(presetCategory);\n  }, [foodItem]);\n  return (\n    <Col className=\"food-item-form\">\n      <Confirmation\n        show={showDeleteModal}\n        onHide={() => setShowDeleteModal(false)}\n        onConfirmFunc={submitDelete}\n        header={`Delete category \"${name}\"?`}\n        body={`Food items under category \"${name}\" will need to be assigned a new category before they appear in the menu.`}\n      />\n      <Form onSubmit={submit}>\n        <Row className=\"col-wrapper\">\n          <Col className=\"image-col\" md=\"auto\">\n            <Col>\n              <Col className=\"label image-col-label\">\n                Image\n              </Col>\n              <Col>\n                <UploadImage\n                  pressedSubmit={pressedSubmit}\n                  setPressedSubmit={setPressedSubmit}\n                  dimensions={[650, 480]}\n                  existingImage={foodItem?.image ? `${process.env.REACT_APP_API_URL}${foodItem.image}` : ''}\n                  onChangeSetOutsideFormValue={setImage}\n                  outsideFormValue={image}\n                />\n              </Col>\n            </Col>\n          </Col>\n          <Col className=\"info-col\">\n            <Col className=\"category-menu\">\n              <Col className=\"label\">\n                Category\n              </Col>\n              <Dropdown>\n                <Dropdown.Toggle\n                  id=\"select-category-dropdown\"\n                >\n                  {category?.name}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {categories.all.map((categoryItem) => (\n                    <Dropdown.Item\n                      key={categoryItem.id}\n                    >\n                      <Button\n                        onClick={() => setCategory({\n                          name: categoryItem.name,\n                          id: categoryItem.id,\n                        })}\n                      >\n                        {categoryItem.name}\n                        {categoryItem.name === 'Uncategorized' && '/hidden'}\n                      </Button>\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n            <Col>\n              <Col className=\"label\">\n                Name\n              </Col>\n              <SmartInput\n                id=\"name-field\"\n                pressedSubmit={pressedSubmit}\n                setPressedSubmit={setPressedSubmit}\n                value={name}\n                onChange={setName}\n              />\n            </Col>\n            <Col className=\"price-control\">\n              <Row>\n                <Col>\n                  <Col className=\"label\">\n                    Price\n                  </Col>\n                  <Form.Control\n                    id=\"price-field\"\n                    value={price}\n                    type=\"number\"\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setPrice(Number(e.target.value))}\n                    min={0}\n                  />\n                </Col>\n                <Col>\n                  <Col className=\"label\">\n                    Discount\n                  </Col>\n                  <Form.Control\n                    id=\"discount-field\"\n                    value={discount}\n                    type=\"number\"\n                    max=\"1\"\n                    step=\"0.05\"\n                    min=\"0\"\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setDiscount(Number(e.target.value))}\n                  />\n                </Col>\n              </Row>\n              <Col className=\"calculated-price\">\n                {showPreviousPrice && (\n                <span className=\"previous-price\">\n                  {`$${previousPrice}`}\n                </span>\n                )}\n                {showPreviousPrice && (\n                <span>\n                  →\n                </span>\n                )}\n                <span>\n                  {`$${calcItemPrice(price, discount)}`}\n                </span>\n              </Col>\n            </Col>\n            <Col className=\"ingredients\">\n              <Col className=\"label\">\n                Ingredients\n              </Col>\n              {ingredients && (\n              <List\n                id=\"ingredients-ul\"\n                items={ingredients}\n                renderList={(ingredient) => (\n                  <li key={ingredient}>\n                    <EditedIngredient\n                      ingredient={ingredient}\n                      deleteIngredient={deleteIngredient}\n                    />\n                  </li>\n                )}\n              />\n              )}\n              <Row className=\"add-ingredient-row\">\n                <Col>\n                  <Form.Control\n                    id=\"ingredient-field\"\n                    value={newIngredients}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setNewIngredients(e.target.value)}\n                    placeholder=\"ingr.1, ingr.2, ...\"\n                  />\n                </Col>\n                <Col md=\"auto\">\n                  <Button\n                    id=\"new-ingredient-button\"\n                    className=\"btn btn-secondary\"\n                    onClick={addIngredient}\n                  >\n                    Add\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n            <Row className=\"serves-time-row\">\n              <Col>\n                <Col className=\"label\">\n                  Serves\n                </Col>\n                <Form.Control\n                  id=\"serves-field\"\n                  value={serves}\n                  type=\"number\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => setServes(Number(e.target.value))}\n                  min={1}\n                />\n              </Col>\n              <Col>\n                <Col className=\"label\">\n                  Time (min, max)\n                </Col>\n                <Row>\n                  <Col className=\"min-col\">\n                    <Form.Control\n                      id=\"min-field\"\n                      className=\"min\"\n                      min=\"0\"\n                      max={time[1]}\n                      value={time[0]}\n                      type=\"number\"\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => setTime([Number(e.target.value), time[1]])}\n                    />\n                  </Col>\n                  <Col className=\"max-col\">\n                    <Form.Control\n                      id=\"max-field\"\n                      className=\"max\"\n                      min={time[0]}\n                      value={time[1]}\n                      type=\"number\"\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => setTime([time[0], Number(e.target.value)])}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Col>\n              <Button\n                className=\"save-button btn btn-secondary\"\n                id=\"submit-button\"\n                type=\"submit\"\n              />\n              {/* use pseudo selector for label */}\n            </Col>\n          </Col>\n        </Row>\n      </Form>\n    </Col>\n  );\n}\n\nFoodItemForm.defaultProps = {\n  foodItem: false,\n  creatingForCategoryId: false,\n  closeModalOnSubmit: false,\n};\n\nexport default observer(FoodItemForm);\n","import React, { ReactNode, ReactElement } from 'react';\n\ninterface ListProps<T> {\n  items: T[];\n  renderList: (list: T, index?: number) => ReactNode;\n  className?: string;\n  children?: ReactElement | ReactElement[];\n  id?: string;\n}\n\nfunction List<T>({\n  items,\n  renderList,\n  className,\n  children,\n  id,\n}: ListProps<T>) {\n  return (\n    <ul className={`${className}`} id={id}>\n      {items?.map(renderList)}\n      {children}\n    </ul>\n  );\n}\n\nList.defaultProps = {\n  className: '',\n  children: false,\n  id: '',\n};\n\nexport default List;\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport {\n  Col, Form,\n} from 'react-bootstrap';\n\ninterface SmartInputProps {\n  primaryStyle?: boolean;\n  label?: string;\n  onFileChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onChange?: (e: string) => void;\n  value?: string;\n  placeholder?: string;\n  pressedSubmit?: boolean;\n  setPressedSubmit?: (param: boolean) => void;\n  optional?: boolean;\n  bsWidth?: number | boolean;\n  type?: string;\n  classes?: string;\n  id?: string;\n  tabIndex?: number | undefined;\n}\n\nfunction SmartInput({\n  label,\n  onChange,\n  onFileChange,\n  value,\n  placeholder,\n  pressedSubmit,\n  setPressedSubmit,\n  optional,\n  bsWidth,\n  primaryStyle,\n  type,\n  classes,\n  id,\n  tabIndex,\n}: SmartInputProps) {\n  const [warn, setWarn] = useState<boolean>(false);\n  useEffect(() => {\n    if (pressedSubmit && !optional && !value) {\n      setWarn(true);\n    }\n  }, [pressedSubmit]);\n  useEffect(() => {\n    if (setPressedSubmit) {\n      setWarn(false);\n      setPressedSubmit(false);\n    }\n  }, [value]);\n  return (\n    <Col className={`smart-input ${classes}`} md={bsWidth}>\n      {label && (\n      <span className=\"label\">\n        {label}\n      </span>\n      )}\n      {type === 'file' ? (\n        <Form.Control\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          onChange={onFileChange}\n          className={`${warn && 'warn'} ${primaryStyle && 'primary-style'}`}\n          tabIndex={tabIndex}\n          onClick={() => {\n            if (setPressedSubmit) {\n              setWarn(false);\n              setPressedSubmit(false);\n            }\n          }}\n        />\n      ) : (\n        <Form.Control\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          value={value}\n          tabIndex={tabIndex}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => onChange!(e.target.value)}\n          className={`${warn && 'warn'} ${primaryStyle && 'primary-style'}`}\n        />\n      )}\n    </Col>\n  );\n}\n\nSmartInput.defaultProps = {\n  placeholder: '',\n  optional: false,\n  bsWidth: false,\n  primaryStyle: false,\n  value: '',\n  onChange: false,\n  onFileChange: false,\n  pressedSubmit: false,\n  setPressedSubmit: false,\n  label: '',\n  type: 'text',\n  classes: '',\n  id: '',\n  tabIndex: undefined,\n};\n\nexport default SmartInput;\n","import React, {\n  useState, useEffect, ChangeEvent,\n} from 'react';\nimport { observer } from 'mobx-react-lite';\nimport SmartInput from './SmartInput';\n\ninterface UploadImageProps {\n  dimensions: number[];\n  existingImage?: string;\n  outsideFormValue?: any;\n  onChangeSetOutsideFormValue?: (...args: any[]) => void;\n  pressedSubmit?: boolean;\n  setPressedSubmit?: (param: boolean) => void;\n}\n\nfunction UploadImage({\n  dimensions,\n  existingImage,\n  onChangeSetOutsideFormValue,\n  pressedSubmit,\n  setPressedSubmit,\n  outsideFormValue,\n}: UploadImageProps) {\n  const [selectedFile, setSelectedFile] = useState<Blob | MediaSource>();\n  const [preview, setPreview] = useState<string>('');\n  const [width, height] = dimensions;\n  const selectFile = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined);\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n    if (onChangeSetOutsideFormValue) {\n      onChangeSetOutsideFormValue(e.target.files[0]);\n    }\n  };\n  useEffect(() => setPreview(existingImage || ''), [existingImage]);\n  useEffect(() => {\n    if (selectedFile && existingImage) {\n      const objectUrl = URL.createObjectURL(selectedFile);\n      setPreview(objectUrl);\n      return () => URL.revokeObjectURL(objectUrl);\n    }\n    if (!selectedFile && existingImage) {\n      return setPreview(existingImage);\n    }\n    if (!selectedFile) {\n      return setPreview('');\n    }\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl);\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n  return (\n    <div\n      className=\"upload-image\"\n    >\n      <div className=\"image-container\">\n        {selectedFile || existingImage ? (\n          <img\n            src={preview}\n            alt=\"avatar-preview\"\n            className=\"preview\"\n          />\n        )\n          : (\n            <div\n              className=\"placeholder-with-dimensions\"\n            >\n              {`${width}x${height}`}\n            </div>\n          )}\n      </div>\n      <SmartInput\n        onFileChange={selectFile}\n        type=\"file\"\n        pressedSubmit={pressedSubmit}\n        setPressedSubmit={setPressedSubmit}\n        value={outsideFormValue}\n      />\n    </div>\n  );\n}\n\nUploadImage.defaultProps = {\n  existingImage: '',\n  onChangeSetOutsideFormValue: false,\n  pressedSubmit: false,\n  setPressedSubmit: false,\n  outsideFormValue: false,\n};\n\nexport default observer(UploadImage);\n","import React, { FormEvent } from 'react';\nimport {\n  Modal,\n  Button,\n  Form,\n} from 'react-bootstrap';\nimport { IModalProps } from '../../types/types';\n\ninterface ConfirmationProps extends IModalProps {\n  header?: string;\n  body?: string;\n  onConfirmFunc?: (args?: any[]) => void;\n}\n\nfunction Confirmation({\n  onHide,\n  show,\n  header,\n  body,\n  onConfirmFunc,\n}: ConfirmationProps) {\n  const onOk = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (onConfirmFunc) {\n      onConfirmFunc();\n    }\n    onHide();\n  };\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      centered\n      className=\"confirmation\"\n    >\n      <Modal.Body>\n        <h2>\n          {header}\n        </h2>\n        {body}\n      </Modal.Body>\n      <Modal.Footer>\n        <Form onSubmit={onOk}>\n          <Button id=\"submit-button\" type=\"submit\">\n            OK\n          </Button>\n        </Form>\n        {onConfirmFunc && (\n          <Button id=\"cancel-button\" onClick={onHide}>\n            Cancel\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nConfirmation.defaultProps = {\n  header: '',\n  body: '',\n  onConfirmFunc: false,\n};\n\nexport default Confirmation;\n","import { IFoodItem, QueryReqMenuFoodItem } from '../types/types';\nimport { $authHost } from './index';\n\nexport const fetchOneFoodItem = async (id: string): Promise<IFoodItem> => {\n  const { data } = await $authHost.get(`api/fooditeminmenu/${id}`);\n  return data;\n};\n\nexport const createFoodItem = async (obj: QueryReqMenuFoodItem | FormData): Promise<IFoodItem> => {\n  const { data } = await $authHost.post('api/fooditeminmenu', obj);\n  return data;\n};\n\nexport const editFoodItem = async (id: string, obj: QueryReqMenuFoodItem | FormData) => {\n  const { data } = await $authHost.put(`api/fooditeminmenu/${id}`, obj);\n  return data;\n};\n\nexport const deleteFoodItem = async (id: string) => {\n  const { data } = await $authHost.delete(`api/fooditeminmenu/${id}`);\n  return data;\n};\n"],"names":["ingredient","deleteIngredient","Row","className","id","Col","md","Button","onClick","icon","faTrashAlt","FoodItemForm","foodItem","creatingForCategoryId","closeModalOnSubmit","useContext","Context","categories","notifications","useState","showDeleteModal","setShowDeleteModal","category","setCategory","name","setName","Number","discount","setDiscount","price","setPrice","previousPrice","showPreviousPrice","calcItemPrice","image","setImage","ingredients","setIngredients","newIngredients","setNewIngredients","serves","setServes","time","setTime","pressedSubmit","setPressedSubmit","filter","ingredientName","submit","e","preventDefault","message","red","shortNotification","foodItemForm","FormData","append","JSON","stringify","editFoodItem","fetchOneFoodItem","updatedFoodItem","previousCategoryId","CategoryId","updateFoodItem","green","createFoodItem","newFoodItem","addFoodItem","response","data","useEffect","presetCategory","all","find","cat","Confirmation","show","onHide","onConfirmFunc","header","body","Form","onSubmit","UploadImage","dimensions","existingImage","process","onChangeSetOutsideFormValue","outsideFormValue","Dropdown","map","categoryItem","SmartInput","value","onChange","type","target","min","max","step","List","items","renderList","placeholder","newIngredientsArr","split","Boolean","forEach","c","join","newIngredient","length","previousIngredient","test","defaultProps","observer","children","label","onFileChange","optional","bsWidth","primaryStyle","classes","tabIndex","warn","setWarn","undefined","selectedFile","setSelectedFile","preview","setPreview","width","height","objectUrl","URL","createObjectURL","revokeObjectURL","src","alt","files","size","centered","$authHost","obj","deleteFoodItem"],"sourceRoot":""}