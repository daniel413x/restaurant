{"version":3,"file":"static/js/361.e041dd2e.chunk.js","mappings":"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","sources":["components/OrderProgress.tsx","components/TimestampedAction.tsx","components/ActiveOrder.tsx","components/FoodItemOrder.tsx","components/List.tsx","http/orderAPI.ts","components/PreviousOrder.tsx","components/PreviousOrders.tsx","pages/Orders.tsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Row } from 'react-bootstrap';\nimport {\n  faShoppingBasket, faFireBurner, faPersonBiking, faSquareCheck,\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface OrderProgressProps {\n  currentOrb: number;\n}\n\nfunction OrderProgress({\n  currentOrb,\n}: OrderProgressProps) {\n  return (\n    <Row id=\"order-progress\">\n      <div className={`orb-wrapper ${currentOrb === 0 && 'in-progress'} ${currentOrb > 0 && 'finished'}`}>\n        <div className=\"over-connector\" />\n        <div className=\"under-connector\" />\n        <div className=\"outer-orb\">\n          <FontAwesomeIcon className=\"icon\" icon={faShoppingBasket} />\n          <div className=\"inner-orb\" />\n        </div>\n      </div>\n      <div className={`orb-wrapper ${currentOrb === 1 && 'in-progress'} ${currentOrb > 1 && 'finished'}`}>\n        <div className=\"over-connector\" />\n        <div className=\"under-connector\" />\n        <div className=\"outer-orb\">\n          <FontAwesomeIcon className=\"icon\" icon={faFireBurner} />\n          <div className=\"inner-orb\" />\n        </div>\n      </div>\n      <div className={`orb-wrapper ${currentOrb === 2 && 'in-progress'} ${currentOrb > 2 && 'finished'}`}>\n        <div className=\"over-connector\" />\n        <div className=\"under-connector\" />\n        <div className=\"outer-orb\">\n          <FontAwesomeIcon className=\"icon\" icon={faPersonBiking} />\n          <div className=\"inner-orb\" />\n        </div>\n      </div>\n      <div className={`orb-wrapper ${currentOrb === 3 && 'finished'}`}>\n        <div className=\"outer-orb\">\n          <FontAwesomeIcon className=\"icon\" icon={faSquareCheck} />\n          <div className=\"inner-orb\" />\n        </div>\n      </div>\n    </Row>\n  );\n}\n\nexport default OrderProgress;\n","import React from 'react';\n\ninterface TimestampedActionProps {\n  message: string;\n  timestamp: string;\n  index: number;\n  currentOrb: number;\n}\n\nfunction TimestampedAction({\n  message,\n  timestamp,\n  index,\n  currentOrb,\n}: TimestampedActionProps) {\n  return (\n    <div className={`timestamped-action ${index < currentOrb && 'old'}`}>\n      {timestamp}\n      {' '}\n      {message}\n    </div>\n  );\n}\n\nexport default TimestampedAction;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite';\nimport Context from '../context/context';\nimport List from './List';\nimport FoodItemOrder from './FoodItemOrder';\nimport OrderProgress from './OrderProgress';\nimport TimestampedAction from './TimestampedAction';\nimport { OrderOrCartFoodItem } from '../types/types';\nimport { fetchActiveOrder } from '../http/orderAPI';\nimport { actionTimestamp } from '../utils/functions';\n\nfunction ActiveOrder() {\n  const { orders } = useContext(Context);\n  const [currentOrb, setCurrentOrb] = useState<number>(0);\n  const [dynamicStatusSubheading, setDynamicStatusSubheading] = useState<string>('');\n  const [min, setMin] = useState<number>(0);\n  const [max, setMax] = useState<number>(0);\n  const {\n    firstName,\n    lastName,\n    addressLineOne,\n    addressLineTwo,\n    city,\n    state,\n    zip,\n  } = orders.activeOrder?.address;\n  useEffect(() => {\n    if (!orders.activeOrder.actionLog.length) {\n      return;\n    }\n    const { status, actionLog } = orders.activeOrder;\n    setDynamicStatusSubheading(actionLog[actionLog.length - 1][1]);\n    setCurrentOrb(status); // status codes range from 0 (incomplete) to 3 (complete)\n    setMin(orders.activeOrder.time[0] + 25 - (4 * status));\n    setMax(orders.activeOrder.time[1] + 25 - (4 * status));\n  }, [orders.activeOrder?.status]);\n  useEffect(() => {\n    (async () => {\n      const activeOrder = await fetchActiveOrder();\n      if (activeOrder) {\n        orders.setActiveOrder(activeOrder);\n      }\n    })();\n  }, []);\n  if (orders.activeOrder.id === '-1') {\n    return null;\n  }\n  return (\n    <Container id=\"active-order\">\n      <h1>\n        You placed an order\n      </h1>\n      <Row className=\"main-row\">\n        <Col className=\"items-delivery-address-col\" md={6}>\n          <h2>\n            Order #\n            <span id=\"displayed-id\">\n              {orders.activeOrder?.id.split('').slice(0, 8).join('')}\n            </span>\n          </h2>\n          <List\n            className=\"items-ul\"\n            id=\"items-ul\"\n            items={orders.activeOrder?.foodItems!}\n            renderList={(foodItem: OrderOrCartFoodItem) => (\n              <li key={foodItem.id}>\n                <FoodItemOrder\n                  foodItem={foodItem}\n                />\n              </li>\n            )}\n          />\n          <Col className=\"delivery-address\">\n            <Col className=\"label\">\n              Deliver to:\n            </Col>\n            <Col>\n              {firstName}\n              {' '}\n              {lastName}\n            </Col>\n            <Col>\n              {addressLineOne}\n              {' '}\n              {addressLineTwo}\n            </Col>\n            <Col>\n              {city}\n              {', '}\n              {state}\n              {' '}\n              {zip}\n            </Col>\n          </Col>\n        </Col>\n        <Col className=\"status\" md={6}>\n          <h2 className=\"header\">\n            The rest is on us!\n          </h2>\n          <span className=\"label\">\n            Order status\n          </span>\n          <span className=\"dynamic-status-subheading\">\n            {dynamicStatusSubheading}\n          </span>\n          <OrderProgress currentOrb={currentOrb} />\n          <Row className=\"info-row\">\n            <Col className=\"estimated-time\" md={6}>\n              <div className=\"inner-content\">\n                <span className=\"label\">\n                  Estimated time\n                </span>\n                <span className={`figure ${currentOrb === 3 && 'blocked'}`}>\n                  {`${min} - ${max} minutes`}\n                </span>\n              </div>\n            </Col>\n            <Col className=\"order-log\" md={6}>\n              <div className=\"inner-content\">\n                <span className=\"label\">\n                  Order tracker\n                </span>\n                <ul id=\"timestamped-action-ul\">\n                  {orders.activeOrder?.actionLog.map((action: [string, string], index: number) => (\n                    <li key={action[1]}>\n                      <TimestampedAction\n                        message={action[1]}\n                        timestamp={actionTimestamp(action[0])}\n                        currentOrb={currentOrb}\n                        index={index}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default observer(ActiveOrder);\n","import React from 'react';\nimport { OrderOrCartFoodItem } from '../types/types';\n\ninterface FoodItemOrderProps {\n  foodItem: OrderOrCartFoodItem;\n}\n\nfunction FoodItemOrder({\n  foodItem,\n}: FoodItemOrderProps) {\n  const {\n    name,\n    ingredients,\n    quantity,\n    instructions,\n    price,\n  } = foodItem;\n  return (\n    <div className=\"food-item-order\">\n      <div className=\"info\">\n        <div className=\"name\">\n          {name}\n        </div>\n        <div className=\"ingredients\">\n          {ingredients?.join(', ')}\n        </div>\n        <div>\n          <span className=\"quantity\">\n            {`Quantity: ${quantity}`}\n          </span>\n          {' '}\n          <span className=\"price\">\n            {`Price: $${price}`}\n          </span>\n        </div>\n        {instructions && (\n        <textarea\n          value={instructions}\n          readOnly\n        />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FoodItemOrder;\n","import React, { ReactNode, ReactElement } from 'react';\n\ninterface ListProps<T> {\n  items: T[];\n  renderList: (list: T, index?: number) => ReactNode;\n  className?: string;\n  children?: ReactElement | ReactElement[];\n  id?: string;\n}\n\nfunction List<T>({\n  items,\n  renderList,\n  className,\n  children,\n  id,\n}: ListProps<T>) {\n  return (\n    <ul className={`${className}`} id={id}>\n      {items?.map(renderList)}\n      {children}\n    </ul>\n  );\n}\n\nList.defaultProps = {\n  className: '',\n  children: false,\n  id: '',\n};\n\nexport default List;\n","import {\n  IOrder,\n  QueryReqSubmitOrder,\n} from '../types/types';\nimport { $authHost } from './index';\n\nexport const fetchUserOrders = async (): Promise<IOrder[]> => {\n  const { data } = await $authHost.get('api/order');\n  return data.rows;\n};\n\nexport const fetchAllOrders = async (): Promise<IOrder[]> => {\n  const { data } = await $authHost.get('api/order/all');\n  return data.rows;\n};\n\nexport const fetchActiveOrder = async (): Promise<IOrder> => {\n  const { data } = await $authHost.get('api/order/activeorder');\n  return data;\n};\n\nexport const submitOrder = async (obj: QueryReqSubmitOrder) => {\n  const { data } = await $authHost.post('api/order', obj);\n  return data;\n};\n\nexport const updateOrderStatus = async (id: string, status: number) => {\n  const { data } = await $authHost.put(`api/order/changestatus/${id}`, { status });\n  return data;\n};\n","import React from 'react';\nimport { OrderOrCartFoodItem, IOrder } from '../types/types';\nimport List from './List';\nimport FoodItemOrder from './FoodItemOrder';\nimport { orderDate } from '../utils/functions';\n\ninterface FoodItemOrderProps {\n  order: IOrder;\n}\n\nfunction PreviousOrder({\n  order,\n}: FoodItemOrderProps) {\n  const formattedDate = orderDate(order.date);\n  return (\n    <div className=\"previous-order\">\n      <div className=\"date\">\n        {formattedDate}\n      </div>\n      <List\n        items={order?.foodItems}\n        renderList={(foodItem: OrderOrCartFoodItem) => (\n          <li key={foodItem.id}>\n            <FoodItemOrder\n              foodItem={foodItem}\n            />\n          </li>\n        )}\n      />\n      <div className=\"date\">\n        <div>\n          Total:\n          {' $'}\n          {order.total}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PreviousOrder;\n","import React, { useEffect, useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite';\nimport Context from '../context/context';\nimport List from './List';\nimport PreviousOrder from './PreviousOrder';\nimport { IOrder } from '../types/types';\nimport { fetchUserOrders } from '../http/orderAPI';\n\nfunction PreviousOrders() {\n  const { orders } = useContext(Context);\n  useEffect(() => {\n    (async () => {\n      const previousOrders = await fetchUserOrders();\n      orders.setOrders(previousOrders);\n    })();\n  }, []);\n  return (\n    <Container id=\"previous-orders\">\n      <h2>\n        Previous orders\n      </h2>\n      {orders.all.length === 0 && 'Previous orders will appear here.'}\n      <List\n        className=\"order-list\"\n        items={orders.all}\n        renderList={(order: IOrder) => (\n          <li key={order.id}>\n            <PreviousOrder\n              order={order}\n            />\n          </li>\n        )}\n      />\n    </Container>\n  );\n}\n\nexport default observer(PreviousOrders);\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport ActiveOrder from '../components/ActiveOrder';\nimport PreviousOrders from '../components/PreviousOrders';\n\nfunction Orders() {\n  return (\n    <div id=\"orders\">\n      <ActiveOrder />\n      <PreviousOrders />\n    </div>\n  );\n}\n\nexport default observer(Orders);\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["currentOrb","Row","id","className","icon","faShoppingBasket","faFireBurner","faPersonBiking","faSquareCheck","message","timestamp","index","observer","orders","useContext","Context","useState","setCurrentOrb","dynamicStatusSubheading","setDynamicStatusSubheading","min","setMin","max","setMax","activeOrder","address","firstName","lastName","addressLineOne","addressLineTwo","city","state","zip","useEffect","actionLog","length","status","time","fetchActiveOrder","setActiveOrder","Container","Col","md","split","slice","join","List","items","foodItems","renderList","foodItem","FoodItemOrder","map","action","actionTimestamp","name","ingredients","quantity","instructions","price","value","readOnly","children","defaultProps","fetchUserOrders","$authHost","data","rows","fetchAllOrders","submitOrder","obj","updateOrderStatus","order","formattedDate","orderDate","date","total","previousOrders","setOrders","all","ActiveOrder","React","props","ref","as","bsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","spans","classes","forEach","brkPoint","span","offset","propValue","infix","push","classNames","useCol","colProps","Component","_jsx","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}