{"version":3,"file":"static/js/716.96f8da9b.chunk.js","mappings":"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","sources":["components/FoodItem.tsx","http/categoryAPI.ts","http/optionsAPI.ts","components/FoodCategory.tsx","components/modals/AddItem.tsx","pages/Menu.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Col, Image,\n} from 'react-bootstrap';\nimport { calcItemPrice } from '../utils/functions';\nimport { IFoodItem } from '../types/types';\n\nfunction Time({ time }: { time: [number, number] | undefined }) {\n  if (!time) {\n    return null;\n  }\n  const [timeMin, timeMax] = time;\n  return (\n    <span>\n      Time:\n      {' '}\n      {timeMin}\n      -\n      {timeMax}\n      {' '}\n      Minutes |\n      {' '}\n    </span>\n  );\n}\n\ninterface FoodItemProps {\n  foodItem: IFoodItem;\n  demo?: boolean;\n  bootstrapWidth?: number | boolean;\n}\n\nfunction FoodItem({\n  foodItem,\n  bootstrapWidth,\n  demo,\n}: FoodItemProps) {\n  const {\n    image,\n    name,\n    time,\n    serves,\n    price,\n    discount,\n    ingredients,\n  } = foodItem;\n  const undiscountedPrice = calcItemPrice(price!);\n  const discountedPrice = discount ? calcItemPrice(price!, discount) : null;\n  return (\n    <Col className=\"food-item\" md={bootstrapWidth}>\n      <Image className=\"food-image\" src={`${demo ? '' : process.env.REACT_APP_API_URL}${image}`} />\n      <Col className=\"below-image-col\">\n        <Col className=\"info-col\">\n          <span className=\"name\">\n            {name}\n          </span>\n          <span className=\"ingredients\">\n            {ingredients?.join(' â€¢ ')}\n          </span>\n          <span className=\"misc-info\">\n            <Time time={time} />\n            <span>\n              Serves:\n              {' '}\n              {serves}\n            </span>\n          </span>\n          <div className=\"price-row\">\n            <span className=\"current-price\">\n              $\n              {discount ? discountedPrice : undiscountedPrice}\n              {' '}\n            </span>\n            {discount ? (\n              <span className=\"previous-price\">\n                $\n                {undiscountedPrice}\n              </span>\n            ) : null}\n          </div>\n        </Col>\n        <Col className=\"order-now-button btn btn-primary\">\n          Order Now\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n\nFoodItem.defaultProps = {\n  bootstrapWidth: false,\n  demo: false,\n};\n\nexport default FoodItem;\n","import CategoriesStore from '../store/CategoriesStore';\nimport {\n  ICategory,\n} from '../types/types';\nimport { $authHost, $host } from './index';\nimport { fetchOptionsByName } from './optionsAPI';\n\nexport const fetchPublicCategories = async (): Promise<ICategory[]> => {\n  const { data } = await $host.get('api/category/public');\n  return data.rows;\n};\n\nexport const fetchAllCategories = async (): Promise<ICategory[]> => {\n  const { data } = await $authHost.get('api/category/all');\n  return data.rows;\n};\n\nexport const createCategory = async (name: string): Promise<ICategory> => {\n  const { data } = await $authHost.post('api/category', { name });\n  return data;\n};\n\nexport const editCategory = async (id: string, name: string): Promise<ICategory> => {\n  const { data } = await $authHost.put(`api/category/${id}`, { name });\n  return data;\n};\n\nexport const deleteCategory = async (id: string): Promise<any> => {\n  const { data } = await $authHost.delete(`api/category/${id}`);\n  return data.token;\n};\n\nexport const fetchAndSortCategories = async (categories: CategoriesStore, publicOnly?: boolean): Promise<any> => {\n  const sortingOptions = await fetchOptionsByName('categoriesSorting');\n  categories.setSorter(sortingOptions);\n  let fetchedCategories;\n  if (publicOnly) {\n    fetchedCategories = await fetchPublicCategories();\n  } else {\n    fetchedCategories = await fetchAllCategories();\n  }\n  categories.setCategories(fetchedCategories);\n};\n","import {\n  ICategoriesSorter,\n  QueryReqUpdateOptions,\n} from '../types/types';\nimport { $authHost } from './index';\n\nexport const fetchOptionsByName = async (str: string): Promise<ICategoriesSorter> => {\n  const { data } = await $authHost.get(`api/options/${str}`);\n  return data;\n};\n\nexport const updateOptionsObject = async (id: string, obj: QueryReqUpdateOptions): Promise<void> => {\n  const { data } = await $authHost.put(`api/options/${id}`, obj);\n  return data;\n};\n","import React, { ReactNode } from 'react';\nimport {\n  Col,\n} from 'react-bootstrap';\nimport { IFoodItem, ICategory } from '../types/types';\nimport { makeId } from '../utils/functions';\n\ninterface FoodCategoryProps {\n  renderItem: (item: IFoodItem) => ReactNode;\n  category: ICategory;\n}\n\nfunction FoodCategory({\n  category, renderItem,\n}: FoodCategoryProps) {\n  const {\n    name,\n    foodItems,\n  } = category;\n  const hrefId = makeId(name);\n  return (\n    <Col id={hrefId} className=\"food-category\">\n      <div className=\"label\">\n        {name}\n      </div>\n      <ul>\n        {foodItems.map(renderItem)}\n      </ul>\n    </Col>\n  );\n}\n\nexport default FoodCategory;\n","import React, {\n  useState,\n  useContext,\n  ChangeEvent,\n  FormEvent,\n} from 'react';\nimport {\n  Modal, Button, Form,\n} from 'react-bootstrap';\nimport {\n  shortNotification,\n  green,\n  red,\n  GUEST,\n} from '../../utils/consts';\nimport {\n  IModalProps,\n  IFoodItem,\n  QueryReqCartFoodItem,\n} from '../../types/types';\nimport FoodItemAuxiliary from '../FoodItemAuxiliary';\nimport Context from '../../context/context';\nimport { addFoodItem } from '../../http/foodItemInCartAPI';\nimport { registration } from '../../http/userAPI';\n\ninterface AddItemProps extends IModalProps {\n  foodItem: IFoodItem;\n}\n\nfunction AddItem({\n  onHide,\n  show,\n  foodItem,\n}: AddItemProps) {\n  const { user, cart, notifications } = useContext(Context);\n  const [quantity, setQuantity] = useState<number>(1);\n  const [instructions, setInstructions] = useState<string>('');\n  const submit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      if (cart.id === GUEST) {\n        const {\n          newCart,\n          newUser,\n        } = await registration({\n          guest: true,\n        });\n        user.set(newUser);\n        cart.set(newCart);\n      }\n      const addedFoodItem: QueryReqCartFoodItem = {\n        name: foodItem.name,\n        price: foodItem.price,\n        discount: foodItem.discount,\n        time: foodItem.time,\n        ingredients: foodItem.ingredients,\n        quantity,\n        instructions,\n        CartId: cart.id,\n        UserId: user.id,\n      };\n      cart.addItem(await addFoodItem(addedFoodItem));\n      notifications.message(\n        `Added to cart ${foodItem.name}`,\n        green,\n        shortNotification,\n        foodItem.image,\n      );\n      setInstructions('');\n      setTimeout(() => setQuantity(1), 500);\n      onHide();\n    } catch (error: any) {\n      notifications.message(\n        error.response.data.message,\n        red,\n        shortNotification,\n      );\n    }\n  };\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      centered\n      className=\"add-item\"\n    >\n      <Form onSubmit={submit}>\n        <Modal.Body>\n          <h2>\n            Add to cart?\n          </h2>\n          <FoodItemAuxiliary\n            foodItem={foodItem}\n            quantity={quantity}\n            increment={() => setQuantity(quantity + 1)}\n            decrement={() => setQuantity(quantity - 1)}\n          />\n          Instructions:\n          <Form.Control\n            id=\"instructions-field\"\n            as=\"textarea\"\n            value={instructions}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setInstructions(e.target.value)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button id=\"submit-button\" type=\"submit\">Add</Button>\n          <Button id=\"back-button\" onClick={onHide}>Back</Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default AddItem;\n","import React, {\n  useState, useEffect, useContext,\n} from 'react';\nimport {\n  Container,\n  Col, Row,\n} from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite';\nimport Context from '../context/context';\nimport List from '../components/List';\nimport FoodCategory from '../components/FoodCategory';\nimport FoodItem from '../components/FoodItem';\nimport AddItem from '../components/modals/AddItem';\nimport { IFoodItem, ICategory } from '../types/types';\nimport { makeId } from '../utils/functions';\nimport { fetchAndSortCategories } from '../http/categoryAPI';\nimport { red } from '../utils/consts';\n\ninterface CategoryAnchorProps {\n  categoryName: string;\n}\n\nfunction CategoryAnchor({ categoryName }: CategoryAnchorProps) {\n  const id = makeId(categoryName);\n  return <a className=\"side-col-menu\" href={`#${id}`}>{categoryName}</a>;\n}\n\nfunction Menu() {\n  const { categories, notifications } = useContext(Context);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [addedItem, setAddedItem] = useState<IFoodItem>();\n  const handleModal = (item: IFoodItem) => {\n    setAddedItem(item);\n    setShowModal(true);\n  };\n  useEffect(() => {\n    (async () => {\n      try {\n        await fetchAndSortCategories(categories, true);\n      } catch (error: any) {\n        notifications.message(\n          `${error.response.data.message}`,\n          red,\n        );\n      }\n    })();\n  }, []);\n  return (\n    <Container id=\"menu\">\n      {addedItem && (\n        <AddItem\n          show={showModal}\n          onHide={() => setShowModal(false)}\n          foodItem={addedItem}\n        />\n      )}\n      <Row className=\"col-wrapper\">\n        <Col className=\"left-col\" md=\"auto\">\n          {/* filter by ingredients: any ingredient added to the db such that you can make a checkbox filter list */}\n          <List\n            items={categories.sortedPublic}\n            renderList={(category) => (\n              <li\n                key={category.id}\n              >\n                <CategoryAnchor\n                  categoryName={category.name}\n                />\n              </li>\n            )}\n          />\n        </Col>\n        <Col className=\"right-col\">\n          <List\n            items={categories.sortedPublic}\n            renderList={(category: ICategory) => {\n              if (category.name === 'Uncategorized') {\n                return null;\n              }\n              return (\n                <li\n                  key={category.id}\n                >\n                  <FoodCategory\n                    category={category}\n                    renderItem={(foodItem: IFoodItem) => (\n                      <li\n                        className=\"food-item-li\"\n                        key={foodItem.id}\n                      >\n                        <button\n                          onClick={() => handleModal(foodItem)}\n                          type=\"button\"\n                          id={`${makeId(foodItem.name)}-button-overlay`}\n                        >\n                          <FoodItem\n                            foodItem={foodItem}\n                          />\n                        </button>\n                      </li>\n                    )}\n                  />\n                </li>\n              );\n            }}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default observer(Menu);\n"],"names":["Time","time","timeMin","timeMax","FoodItem","foodItem","bootstrapWidth","demo","image","name","serves","price","discount","ingredients","undiscountedPrice","calcItemPrice","discountedPrice","className","md","src","process","join","defaultProps","fetchPublicCategories","$host","data","rows","fetchAllCategories","$authHost","createCategory","editCategory","id","deleteCategory","token","fetchAndSortCategories","categories","publicOnly","fetchOptionsByName","sortingOptions","setSorter","fetchedCategories","setCategories","str","updateOptionsObject","obj","category","renderItem","foodItems","hrefId","makeId","Col","map","onHide","show","useContext","Context","user","cart","notifications","useState","quantity","setQuantity","instructions","setInstructions","submit","e","preventDefault","GUEST","registration","guest","newCart","newUser","set","addedFoodItem","CartId","UserId","addFoodItem","addItem","message","green","shortNotification","setTimeout","response","red","Modal","size","centered","Form","onSubmit","FoodItemAuxiliary","increment","decrement","as","value","onChange","target","Button","type","onClick","CategoryAnchor","categoryName","href","observer","showModal","setShowModal","addedItem","setAddedItem","useEffect","Container","Row","List","items","sortedPublic","renderList"],"sourceRoot":""}