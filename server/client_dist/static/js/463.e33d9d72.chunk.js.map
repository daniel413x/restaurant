{"version":3,"file":"static/js/463.e33d9d72.chunk.js","mappings":"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","sources":["components/AuthBox.tsx","components/LabeledCheckboxButton.tsx","components/SmartInput.tsx","pages/Auth.tsx"],"sourcesContent":["import React, {\n  useState, useContext, FormEvent,\n} from 'react';\nimport {\n  Col, Form, Row,\n} from 'react-bootstrap';\nimport {\n  shortNotification,\n  red,\n  longNotification,\n} from '../utils/consts';\nimport SmartInput from './SmartInput';\nimport LabeledCheckboxButton from './LabeledCheckboxButton';\nimport Context from '../context/context';\nimport { login, registration } from '../http/userAPI';\nimport { createAddress } from '../http/addressAPI';\nimport { fetchUserCart } from '../http/cartAPI';\nimport { validateEmail, validatePassword } from '../utils/functions';\n\ninterface AuthBoxProps {\n  onSuccess: () => void;\n  forLogin: boolean;\n}\n\nfunction AuthBox({\n  onSuccess,\n  forLogin,\n}: AuthBoxProps) {\n  const {\n    notifications,\n    user,\n    cart,\n    addresses,\n  } = useContext(Context);\n  const [pressedSubmit, setPressedSubmit] = useState<boolean>(false);\n  const [saveDefaultAddress, setSaveDefaultAddress] = useState<boolean>(false);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  // const [username, setname] = useState<string>('');\n  const [firstName, setFirstName] = useState<string>('');\n  const [middleName, setMiddleName] = useState<string>('');\n  const [lastName, setLastName] = useState<string>('');\n  const [addressLineOne, setAddressLineOne] = useState<string>('');\n  const [addressLineTwo, setAddressLineTwo] = useState<string>('');\n  const [city, setCity] = useState<string>('');\n  const [state, setState] = useState<string>('');\n  const [zip, setZip] = useState<string>('');\n  const submit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setPressedSubmit(true);\n    if (!email || !password) {\n      notifications.message(\n        'Please complete required fields',\n        red,\n        shortNotification,\n      );\n      return;\n    }\n    const validEmail = validateEmail(email);\n    if (!validEmail) {\n      notifications.message(\n        'Invalid email format',\n        red,\n        longNotification,\n      );\n      return;\n    }\n    const validPassword = validatePassword(password);\n    if (!validPassword && !forLogin) {\n      notifications.message(\n        'Please choose a password between 6 and 256 characters',\n        red,\n        longNotification,\n      );\n      return;\n    }\n    if (saveDefaultAddress && (!firstName || !lastName || !addressLineOne || !city || !state || !zip)) {\n      notifications.message(\n        'Please complete required fields',\n        red,\n        shortNotification,\n      );\n      return;\n    }\n    try {\n      if (forLogin) {\n        const fetchedUser = await login(email, password);\n        const fetchedCart = await fetchUserCart();\n        user.set(fetchedUser);\n        cart.set(fetchedCart);\n      } else {\n        const guestCartItems = cart.foodItems.length > 0;\n        const guestId = localStorage.getItem('guestId');\n        const { newUser, newCart } = await registration(email, password, guestId!, guestCartItems ? cart.foodItems : undefined);\n        user.set(newUser);\n        if (guestCartItems) {\n          localStorage.removeItem('guestCartItems');\n        }\n        cart.set(newCart);\n        let defaultAddress;\n        if (saveDefaultAddress) {\n          defaultAddress = await createAddress({\n            firstName,\n            lastName,\n            addressLineOne,\n            addressLineTwo,\n            city,\n            state,\n            zip,\n            isDefault: true,\n            UserId: newUser.id,\n          });\n          addresses.addAddress(defaultAddress);\n        }\n      }\n      onSuccess();\n    } catch (error: any) {\n      notifications.message(\n        error.response.data.message,\n        red,\n        shortNotification,\n      );\n    }\n  };\n  return (\n    <Col className=\"auth-box\">\n      <Form onSubmit={(e) => submit(e)}>\n        <SmartInput\n          id=\"email-field\"\n          label=\"Email address\"\n          onChange={setEmail}\n          value={email}\n          placeholder={forLogin ? '' : 'Required'}\n          pressedSubmit={pressedSubmit}\n          setPressedSubmit={setPressedSubmit}\n          primaryStyle\n        />\n        <SmartInput\n          id=\"password-field\"\n          label=\"Password\"\n          type=\"password\"\n          onChange={setPassword}\n          value={password}\n          placeholder={forLogin ? '' : 'Required'}\n          pressedSubmit={pressedSubmit}\n          setPressedSubmit={setPressedSubmit}\n          primaryStyle\n        />\n        {forLogin ? <div className=\"no-shift\" /> : (\n          <div className=\"default-address-form\">\n            <LabeledCheckboxButton\n              id=\"save-default-address-button\"\n              label=\"Save a default delivery address (optional)\"\n              boolean={saveDefaultAddress}\n              setBoolean={setSaveDefaultAddress}\n              classes=\"toggle-default-address-form\"\n            />\n            {saveDefaultAddress && (\n              <div>\n                <Row>\n                  <SmartInput\n                    id=\"first-name-field\"\n                    label=\"First name\"\n                    onChange={setFirstName}\n                    value={firstName}\n                    placeholder=\"Required\"\n                    pressedSubmit={pressedSubmit}\n                    setPressedSubmit={setPressedSubmit}\n                    primaryStyle\n                  />\n                  <SmartInput\n                    label=\"Middle name\"\n                    id=\"middle-name-field\"\n                    classes=\"blocked\"\n                    onChange={setMiddleName}\n                    value={middleName}\n                    placeholder=\"Optional\"\n                    pressedSubmit={pressedSubmit}\n                    setPressedSubmit={setPressedSubmit}\n                    optional\n                    primaryStyle\n                  />\n                </Row>\n                <SmartInput\n                  label=\"Last name\"\n                  id=\"last-name-field\"\n                  onChange={setLastName}\n                  value={lastName}\n                  placeholder=\"Required\"\n                  pressedSubmit={pressedSubmit}\n                  setPressedSubmit={setPressedSubmit}\n                  primaryStyle\n                />\n                <SmartInput\n                  label=\"Address line one\"\n                  id=\"address-line-one-field\"\n                  onChange={setAddressLineOne}\n                  value={addressLineOne}\n                  placeholder=\"Required\"\n                  pressedSubmit={pressedSubmit}\n                  setPressedSubmit={setPressedSubmit}\n                  primaryStyle\n                />\n                <SmartInput\n                  id=\"address-line-two-field\"\n                  label=\"Address line two\"\n                  onChange={setAddressLineTwo}\n                  value={addressLineTwo}\n                  placeholder=\"Optional\"\n                  pressedSubmit={pressedSubmit}\n                  setPressedSubmit={setPressedSubmit}\n                  optional\n                  primaryStyle\n                />\n                <Row className=\"city-state-row\">\n                  <SmartInput\n                    id=\"city-field\"\n                    label=\"City\"\n                    onChange={setCity}\n                    value={city}\n                    placeholder=\"Required\"\n                    pressedSubmit={pressedSubmit}\n                    setPressedSubmit={setPressedSubmit}\n                    primaryStyle\n                  />\n                  <SmartInput\n                    label=\"State\"\n                    id=\"state-field\"\n                    classes=\"px-1\"\n                    onChange={setState}\n                    value={state}\n                    placeholder=\"Req.\"\n                    pressedSubmit={pressedSubmit}\n                    setPressedSubmit={setPressedSubmit}\n                    primaryStyle\n                  />\n                  <SmartInput\n                    label=\"Zip\"\n                    id=\"zip-field\"\n                    onChange={setZip}\n                    value={zip}\n                    placeholder=\"Req.\"\n                    pressedSubmit={pressedSubmit}\n                    setPressedSubmit={setPressedSubmit}\n                    primaryStyle\n                  />\n                </Row>\n              </div>\n            )}\n          </div>\n        )}\n        <Col md=\"auto\">\n          <Form.Control id=\"submit-button\" type=\"submit\" value=\"Submit\" />\n        </Col>\n      </Form>\n    </Col>\n  );\n}\n\nexport default AuthBox;\n","import React, {\n  useState, useRef, MouseEvent, useEffect,\n} from 'react';\nimport useOnClickOutside from '../hooks/useOnOutsideClick';\n\ninterface LabeledCheckboxButtonProps {\n  label: string;\n  boolean: boolean;\n  setBoolean: (boolean: boolean) => void;\n  classes?: string;\n  light?: boolean;\n  id?: string;\n}\n\nfunction LabeledCheckboxButton({\n  label,\n  boolean,\n  setBoolean,\n  classes,\n  light,\n  id,\n}: LabeledCheckboxButtonProps) {\n  const [active, setActive] = useState<boolean>(false);\n  const [boxShadow, setBoxShadow] = useState<boolean>(false);\n  const ref = useRef<HTMLButtonElement>(null);\n  useOnClickOutside(ref, () => setBoxShadow(false));\n  useEffect(() => {\n    setBoxShadow(boolean);\n  }, [boolean]);\n  let boxShadowVal = null;\n  if (light && boxShadow) {\n    boxShadowVal = 'box-shadow-light';\n  } else if (boxShadow) {\n    boxShadowVal = 'box-shadow';\n  }\n  return (\n    <button\n      id={id}\n      className={`labeled-checkbox-button ${classes}`}\n      ref={ref}\n      type=\"button\"\n      onMouseUp={() => setActive(false)}\n      onMouseLeave={() => setActive(false)}\n      onMouseDown={() => setActive(true)}\n      onMouseEnter={(e: MouseEvent<HTMLButtonElement>) => {\n        if (e.buttons > 0) {\n          setActive(true);\n        }\n      }}\n      onClick={() => {\n        setBoolean(!boolean);\n        setBoxShadow(!boolean);\n      }}\n    >\n      <div>\n        <div className={`checkbox-div ${boolean && 'checked'} ${active && 'active'} ${boxShadowVal}`} />\n      </div>\n      <div className=\"label\">\n        {label}\n      </div>\n    </button>\n  );\n}\n\nLabeledCheckboxButton.defaultProps = {\n  light: false,\n  classes: '',\n  id: '',\n};\n\nexport default LabeledCheckboxButton;\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport {\n  Col, Form,\n} from 'react-bootstrap';\n\ninterface SmartInputProps {\n  primaryStyle?: boolean;\n  label?: string;\n  onFileChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onChange?: (e: string) => void;\n  value?: string;\n  placeholder?: string;\n  pressedSubmit?: boolean;\n  setPressedSubmit?: (param: boolean) => void;\n  optional?: boolean;\n  bsWidth?: number | boolean;\n  type?: string;\n  classes?: string;\n  id?: string;\n  tabIndex?: number | undefined;\n}\n\nfunction SmartInput({\n  label,\n  onChange,\n  onFileChange,\n  value,\n  placeholder,\n  pressedSubmit,\n  setPressedSubmit,\n  optional,\n  bsWidth,\n  primaryStyle,\n  type,\n  classes,\n  id,\n  tabIndex,\n}: SmartInputProps) {\n  const [warn, setWarn] = useState<boolean>(false);\n  useEffect(() => {\n    if (pressedSubmit && !optional && !value) {\n      setWarn(true);\n    }\n  }, [pressedSubmit]);\n  useEffect(() => {\n    if (setPressedSubmit) {\n      setWarn(false);\n      setPressedSubmit(false);\n    }\n  }, [value]);\n  return (\n    <Col className={`smart-input ${classes}`} md={bsWidth}>\n      {label && (\n      <span className=\"label\">\n        {label}\n      </span>\n      )}\n      {type === 'file' ? (\n        <Form.Control\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          onChange={onFileChange}\n          className={`${warn && 'warn'} ${primaryStyle && 'primary-style'}`}\n          tabIndex={tabIndex}\n          onClick={() => {\n            if (setPressedSubmit) {\n              setWarn(false);\n              setPressedSubmit(false);\n            }\n          }}\n        />\n      ) : (\n        <Form.Control\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          value={value}\n          tabIndex={tabIndex}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => onChange!(e.target.value)}\n          className={`${warn && 'warn'} ${primaryStyle && 'primary-style'}`}\n        />\n      )}\n    </Col>\n  );\n}\n\nSmartInput.defaultProps = {\n  placeholder: '',\n  optional: false,\n  bsWidth: false,\n  primaryStyle: false,\n  value: '',\n  onChange: false,\n  onFileChange: false,\n  pressedSubmit: false,\n  setPressedSubmit: false,\n  label: '',\n  type: 'text',\n  classes: '',\n  id: '',\n  tabIndex: undefined,\n};\n\nexport default SmartInput;\n","import React, {\n  useState, useEffect, useContext,\n} from 'react';\nimport { useLocation, useNavigate, NavLink } from 'react-router-dom';\nimport {\n  Container,\n} from 'react-bootstrap';\nimport {\n  FRONT_PAGE_ROUTE,\n  REGISTRATION_ROUTE,\n  LOGIN_ROUTE,\n  shortNotification,\n  green,\n} from '../utils/consts';\nimport AuthBox from '../components/AuthBox';\nimport Context from '../context/context';\n\nfunction Auth() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { notifications, user } = useContext(Context);\n  const [forLogin, setShowLogin] = useState<boolean>(false);\n  const onSuccess = () => {\n    notifications.message(\n      forLogin ? 'You logged in successfully' : 'Registration successful',\n      green,\n      shortNotification,\n    );\n    navigate(FRONT_PAGE_ROUTE);\n  };\n  useEffect(() => {\n    if (user.isRegistered) {\n      navigate(FRONT_PAGE_ROUTE);\n    }\n    if (location.pathname === `/${LOGIN_ROUTE}`) {\n      setShowLogin(true);\n    } else {\n      setShowLogin(false);\n    }\n  }, []);\n  return (\n    <Container id=\"auth\">\n      <h2>\n        {forLogin ? 'Login' : 'Registration'}\n      </h2>\n      <AuthBox\n        onSuccess={onSuccess}\n        forLogin={forLogin}\n      />\n      <NavLink id=\"switch-link\" to={`/${forLogin ? REGISTRATION_ROUTE : LOGIN_ROUTE}`}>\n        {forLogin ? 'Register an account' : 'I\\'m already registered'}\n      </NavLink>\n    </Container>\n  );\n}\n\nexport default Auth;\n"],"names":["onSuccess","forLogin","useContext","Context","notifications","user","cart","addresses","useState","pressedSubmit","setPressedSubmit","saveDefaultAddress","setSaveDefaultAddress","email","setEmail","password","setPassword","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","addressLineOne","setAddressLineOne","addressLineTwo","setAddressLineTwo","city","setCity","state","setState","zip","setZip","submit","e","preventDefault","message","red","shortNotification","validateEmail","longNotification","validatePassword","login","fetchedUser","fetchUserCart","fetchedCart","set","guestCartItems","foodItems","length","guestId","localStorage","getItem","registration","undefined","newUser","newCart","removeItem","createAddress","isDefault","UserId","id","defaultAddress","addAddress","response","data","className","onSubmit","label","onChange","value","placeholder","primaryStyle","type","boolean","setBoolean","classes","optional","md","LabeledCheckboxButton","light","active","setActive","boxShadow","setBoxShadow","ref","useRef","useOnClickOutside","useEffect","boxShadowVal","onMouseUp","onMouseLeave","onMouseDown","onMouseEnter","buttons","onClick","defaultProps","SmartInput","onFileChange","bsWidth","tabIndex","warn","setWarn","target","location","useLocation","navigate","useNavigate","setShowLogin","isRegistered","FRONT_PAGE_ROUTE","pathname","LOGIN_ROUTE","green","to","REGISTRATION_ROUTE"],"sourceRoot":""}